/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <33 32>;
        };

        hyper {
            bindings = <&kp RC(RS(RA(RGUI)))>;
            key-positions = <39 40 41>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL &kp LSHFT>;

            label = "SCREENSHOT";
        };

        video: video {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT>;

            label = "VIDEO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BSPC    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&lt 3 ESCAPE  &kp Q       &kp W           &kp E            &kp R         &kp T                        &kp Y  &kp U         &kp I         &kp O            &kp P          &kp MINUS
&kp TAB       &hm LGUI A  &hm LEFT_ALT S  &hm LCTRL D      &hm LSHIFT F  &kp G                        &kp H  &hm RSHIFT J  &hm RCTRL K   &hm RIGHT_ALT L  &hm RGUI SEMI  &kp SQT
&kp GRAVE     &kp Z       &kp X           &kp C            &kp V         &kp B                        &kp N  &kp M         &kp COMMA     &kp DOT          &kp FSLH       &kp BACKSLASH
                                          &lt 2 BACKSPACE  &lt 1 ENTER          &hm LEFT_SHIFT SPACE         &lt 1 ENTER   &lt 2 DELETE
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR   &kp EQUAL
&trans  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE           &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &kp GRAVE  &kp TILDE
&trans  &kp ESC    &kp LGUI  &kp LALT  &kp CLCK  &kp DQT            &kp HOME   &kp END   &kp PG_UP  &kp PG_DN  &kp PSCRN  &mt RSHFT SPACE
                             &trans    &trans               &trans             &trans    &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BSPC |    |     |

            bindings = <
&kp KP_PLUS      &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LEFT_BRACE            &kp RIGHT_BRACE        &none     &kp UP    &none      &kp N0         &kp EQUAL
&kp KP_SUBTRACT  &kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LEFT_BRACKET          &kp RIGHT_BRACKET      &kp LEFT  &kp DOWN  &kp RIGHT  &kp F5         &kp F6
&trans           &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LPAR                  &kp RIGHT_PARENTHESIS  &none     &none     &none      &kp BACKSLASH  &kp F12
                                                   &trans           &trans                             &trans                         &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none   &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &none                    &none         &none         &none         &none         &none         &none
&none            &none            &none            &none            &none   &none                    &sys_reset    &none         &none         &none         &video        &screenshot
                                                   &trans           &trans                   &trans                &trans        &trans
            >;
        };
    };
};
